{
  "address": "0x992980a2240d05bf7ed64CAd26d463875B91F2Fd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_beneficiaries",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_interval",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_trustee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountWithdrawable",
          "type": "uint256"
        }
      ],
      "name": "createTrust",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "creatorToTrust",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployedContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x083dd1c41a241d5a79af052870d30aa160f89525d5b68178a2df5da509d4a8ef",
  "receipt": {
    "to": null,
    "from": "0x9aaa7df667c76155D8Cc85CBb95738Bb8074Ac4e",
    "contractAddress": "0x992980a2240d05bf7ed64CAd26d463875B91F2Fd",
    "transactionIndex": 3,
    "gasUsed": "2325490",
    "logsBloom": "0x
    "blockHash": "0x1ba7b6c643c10eb261d17e520a93b629db0dcf3b3aaec83433007dbdcdf57ba4",
    "transactionHash": "0x083dd1c41a241d5a79af052870d30aa160f89525d5b68178a2df5da509d4a8ef",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 27051091,
        "transactionHash": "0x083dd1c41a241d5a79af052870d30aa160f89525d5b68178a2df5da509d4a8ef",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000009aaa7df667c76155d8cc85cbb95738bb8074ac4e",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000fea650f07d465000000000000000000000000000000000000000000000000005017574928ebedc0000000000000000000000000000000000000000000004378ec18b5582a90b8f0000000000000000000000000000000000000000000000000402cf23a211788c0000000000000000000000000000000000000000000004378fc031a6732651df",
        "logIndex": 11,
        "blockHash": "0x1ba7b6c643c10eb261d17e520a93b629db0dcf3b3aaec83433007dbdcdf57ba4"
      }
    ],
    "blockNumber": 27051091,
    "cumulativeGasUsed": "3515365",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "565cf348d877976fb4933563d5e1c722",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_beneficiaries\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_interval\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_trustee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountWithdrawable\",\"type\":\"uint256\"}],\"name\":\"createTrust\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creatorToTrust\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployedContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ncontract Factory {\\r\\n\\r\\n    mapping (address => address[]) public creatorToTrust;\\r\\n\\r\\n    function createTrust(address[] memory _beneficiaries, uint256 _interval, address _trustee, uint _amountWithdrawable) public {\\r\\n        address trustContract = address(new DecentralizedTrustFund(_beneficiaries, msg.sender, _interval, _trustee, _amountWithdrawable));\\r\\n        creatorToTrust[msg.sender].push(trustContract);\\r\\n    }\\r\\n\\r\\n    function getDeployedContracts() public view returns(address[] memory){\\r\\n        return creatorToTrust[msg.sender];\\r\\n    }\\r\\n}\\r\\n\\r\\nerror DecentralizedTrustFund_MustDepositValidAmount();\\r\\nerror DecentralizedTrustFund_SufficentTimeNotElapsed();\\r\\n\\r\\ncontract DecentralizedTrustFund is KeeperCompatibleInterface {\\r\\n    address[] private trustees;\\r\\n    uint256 private ethBalance;\\r\\n    uint256 private daiBalance;\\r\\n    uint256 private interval;\\r\\n    uint256 private amountWithdrawable;\\r\\n    address private owner;\\r\\n    address[] private beneficiaries;\\r\\n    address[2] whiteLists;\\r\\n    mapping (address => uint256) private addressToAmount;\\r\\n    mapping (address => bool) private isBeneficiaries;\\r\\n    mapping (address => bool) private isTrustee;\\r\\n    mapping (address => uint256) private lastTimestamp;\\r\\n    mapping (address => bool) private isWhiteList;\\r\\n    /// @dev hardcoded stable coin addresses to be refactored\\r\\n    IERC20 private token = IERC20(0xd393b1E02dA9831Ff419e22eA105aAe4c47E1253);\\r\\n\\r\\n    modifier onlyOwner(){\\r\\n        require(msg.sender == owner, \\\"Operation restricted to owner\\\");\\r\\n        _;\\r\\n    }\\r\\n    modifier onlyTrustee(){\\r\\n        require(isTrustee[msg.sender] == true || msg.sender == owner, \\\"Operation restricted to trustees\\\");\\r\\n        _;\\r\\n    }\\r\\n    event Deposited(address depositor, uint256 amount);\\r\\n\\r\\n\\r\\n\\r\\nconstructor(address[] memory _beneficiaries, address _owner, uint256 _interval, address _trustee, uint256 _amountWithdrawable){\\r\\n    for(uint i = 0; i< _beneficiaries.length; i++){\\r\\n        isBeneficiaries[_beneficiaries[i]] = true;\\r\\n        lastTimestamp[_beneficiaries[i]] = block.timestamp;\\r\\n    }\\r\\n    whiteLists = [0xd393b1E02dA9831Ff419e22eA105aAe4c47E1253, 0xd393b1E02Da9831EF419E22eA105aae4C47E1253];\\r\\n    for(uint i = 0; i< whiteLists.length; i++){\\r\\n        isWhiteList[whiteLists[i]] = true;\\r\\n    }\\r\\n        owner = _owner;\\r\\n        beneficiaries = _beneficiaries;\\r\\n        interval = _interval;\\r\\n        isTrustee[_trustee] = true;\\r\\n        trustees.push(_trustee);\\r\\n        amountWithdrawable = _amountWithdrawable;\\r\\n    }\\r\\n\\r\\n    function approveDeposit(uint _amount) public {\\r\\n        token.approve(address(this), _amount);\\r\\n    }\\r\\n\\r\\n    function depositDai(uint _amount) public {\\r\\n        uint allowance = token.allowance(msg.sender, address(this));\\r\\n        require(allowance >= _amount, \\\"Check the token allowance\\\");\\r\\n        bool success = token.transferFrom(msg.sender, address(this), _amount);\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n    function withdrawDai(uint256 _amount) public onlyOwner {\\r\\n        require(token.balanceOf(address(this)) >= _amount);\\r\\n        token.transfer(msg.sender, _amount);\\r\\n    }\\r\\n\\r\\n    function addTrustee(address _trustee) public onlyOwner {\\r\\n        isTrustee[_trustee] = true;\\r\\n        trustees.push(_trustee);\\r\\n    }\\r\\n    function removeTrustee(address _trustee, uint _index) public onlyOwner {\\r\\n        require(_index < trustees.length, \\\"index out of bound\\\");\\r\\n        isTrustee[_trustee] = false;\\r\\n        address[] memory _trustees = trustees;\\r\\n        for (uint i = _index; i < _trustees.length - 1; i++) {\\r\\n            _trustees[i] = _trustees[i + 1];\\r\\n        }\\r\\n        trustees = _trustees;\\r\\n        trustees.pop();\\r\\n    }\\r\\n\\r\\n    function getTrustees() public view returns(address[] memory) {\\r\\n        return trustees;\\r\\n    }\\r\\n\\r\\n    function checkUpkeep(bytes memory /* checkData */ ) public view override returns (\\r\\n            bool upkeepNeeded,\\r\\n            bytes memory /* performData */\\r\\n        ){\\r\\n         if(block.timestamp - lastTimestamp[msg.sender] >= interval){\\r\\n             upkeepNeeded = true;\\r\\n         } else {\\r\\n             upkeepNeeded = false;\\r\\n         }\\r\\n        }\\r\\n    \\r\\n    function performUpkeep(bytes calldata /* performData */) external override {\\r\\n        (bool enoughTimePassed, ) = checkUpkeep(\\\"\\\");\\r\\n        if(!enoughTimePassed){\\r\\n            revert DecentralizedTrustFund_SufficentTimeNotElapsed();\\r\\n        }\\r\\n        token.transfer(msg.sender, amountWithdrawable);\\r\\n        lastTimestamp[msg.sender] = block.timestamp;\\r\\n    }\\r\\n\\r\\n    function depositEth() public payable {\\r\\n        if(msg.value == 0){\\r\\n            revert DecentralizedTrustFund_MustDepositValidAmount();\\r\\n        }\\r\\n        ethBalance += msg.value;\\r\\n        addressToAmount[msg.sender] += msg.value;\\r\\n        emit Deposited(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n \\r\\n    function getOwner() public view returns(address) {\\r\\n        return owner;\\r\\n    }\\r\\n    \\r\\n    fallback() external payable {\\r\\n        depositEth();\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        depositEth();\\r\\n    }\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0x00ff6ce49300cce37c3f54b752f6d84ce66ff251aa38985528219c777ef692f2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c806326ae991e146200004b5780638eb91251146200006b578063aa9a068f14620000a1575b600080fd5b620000696004803603810190620000639190620003fa565b620000c3565b005b620000896004803603810190620000839190620003b3565b620001ae565b60405162000098919062000542565b60405180910390f35b620000ab620001fd565b604051620000ba91906200055f565b60405180910390f35b60008433858585604051620000d890620002c9565b620000e895949392919062000583565b604051809103906000f08015801562000105573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60006020528160005260406000208181548110620001cb57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620002bf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000274575b5050505050905090565b61219f806200077583390190565b6000620002ee620002e88462000610565b620005e7565b9050808382526020820190508285602086028201111562000314576200031362000720565b5b60005b858110156200034857816200032d888262000352565b84526020840193506020830192505060018101905062000317565b5050509392505050565b600081359050620003638162000740565b92915050565b600082601f8301126200038157620003806200071b565b5b813562000393848260208601620002d7565b91505092915050565b600081359050620003ad816200075a565b92915050565b60008060408385031215620003cd57620003cc6200072a565b5b6000620003dd8582860162000352565b9250506020620003f0858286016200039c565b9150509250929050565b600080600080608085870312156200041757620004166200072a565b5b600085013567ffffffffffffffff81111562000438576200043762000725565b5b620004468782880162000369565b945050602062000459878288016200039c565b93505060406200046c8782880162000352565b92505060606200047f878288016200039c565b91505092959194509250565b6000620004998383620004a5565b60208301905092915050565b620004b08162000678565b82525050565b620004c18162000678565b82525050565b6000620004d4826200064f565b620004e0818562000667565b9350620004ed836200063f565b8060005b83811015620005245781516200050888826200048b565b975062000515836200065a565b925050600181019050620004f1565b5085935050505092915050565b6200053c81620006ac565b82525050565b6000602082019050620005596000830184620004b6565b92915050565b600060208201905081810360008301526200057b8184620004c7565b905092915050565b600060a08201905081810360008301526200059f8188620004c7565b9050620005b06020830187620004b6565b620005bf604083018662000531565b620005ce6060830185620004b6565b620005dd608083018462000531565b9695505050505050565b6000620005f362000606565b9050620006018282620006b6565b919050565b6000604051905090565b600067ffffffffffffffff8211156200062e576200062d620006ec565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600062000685826200068c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620006c1826200072f565b810181811067ffffffffffffffff82111715620006e357620006e2620006ec565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200074b8162000678565b81146200075757600080fd5b50565b6200076581620006ac565b81146200077157600080fd5b5056fe608060405273d393b1e02da9831ff419e22ea105aae4c47e1253600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b506040516200219f3803806200219f83398181016040528101906200008c91906200061c565b60005b855181101562000185576001600a6000888481518110620000b557620000b46200080c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555042600c60008884815181106200012957620001286200080c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806200017c906200078f565b9150506200008f565b50604051806040016040528073d393b1e02da9831ff419e22ea105aae4c47e125373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200173d393b1e02da9831ef419e22ea105aae4c47e125373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525060079060026200022d92919062000410565b5060005b6002811015620002e1576001600d6000600784600281106200025857620002576200080c565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620002d8906200078f565b91505062000231565b5083600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600690805190602001906200033b92919062000492565b50826003819055506001600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806004819055505050505050620008c3565b82600281019282156200047f579160200282015b828111156200047e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000424565b5b5090506200048e919062000521565b5090565b8280548282559060005260206000209081019282156200050e579160200282015b828111156200050d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620004b3565b5b5090506200051d919062000521565b5090565b5b808211156200053c57600081600090555060010162000522565b5090565b6000620005576200055184620006ec565b620006c3565b905080838252602082019050828560208602820111156200057d576200057c6200086f565b5b60005b85811015620005b15781620005968882620005bb565b84526020840193506020830192505060018101905062000580565b5050509392505050565b600081519050620005cc816200088f565b92915050565b600082601f830112620005ea57620005e96200086a565b5b8151620005fc84826020860162000540565b91505092915050565b6000815190506200061681620008a9565b92915050565b600080600080600060a086880312156200063b576200063a62000879565b5b600086015167ffffffffffffffff8111156200065c576200065b62000874565b5b6200066a88828901620005d2565b95505060206200067d88828901620005bb565b9450506040620006908882890162000605565b9350506060620006a388828901620005bb565b9250506080620006b68882890162000605565b9150509295509295909350565b6000620006cf620006e2565b9050620006dd828262000759565b919050565b6000604051905090565b600067ffffffffffffffff8211156200070a57620007096200083b565b5b602082029050602081019050919050565b600062000728826200072f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b62000764826200087e565b810181811067ffffffffffffffff821117156200078657620007856200083b565b5b80604052505050565b60006200079c826200074f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620007d257620007d1620007dd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200089a816200071b565b8114620008a657600080fd5b50565b620008b4816200074f565b8114620008c057600080fd5b50565b6118cc80620008d36000396000f3fe6080604052600436106100955760003560e01c8063893d20e811610059578063893d20e81461017157806393a991af1461019c578063beffaf09146101c5578063dc78ac1c146101f0578063fb2ad44814610219576100a4565b80631409ff6e146100ae57806335842f74146100d7578063439370b1146101005780634585e33b1461010a5780636e04ff0d14610133576100a4565b366100a4576100a2610242565b005b6100ac610242565b005b3480156100ba57600080fd5b506100d560048036038101906100d09190611131565b610327565b005b3480156100e357600080fd5b506100fe60048036038101906100f99190611131565b6103da565b005b610108610242565b005b34801561011657600080fd5b50610131600480360381019061012c919061109b565b6105c8565b005b34801561013f57600080fd5b5061015a600480360381019061015591906110e8565b610717565b6040516101689291906113c8565b60405180910390f35b34801561017d57600080fd5b50610186610781565b6040516101939190611302565b60405180910390f35b3480156101a857600080fd5b506101c360048036038101906101be9190611131565b6107ab565b005b3480156101d157600080fd5b506101da6109a5565b6040516101e791906113a6565b60405180910390f35b3480156101fc57600080fd5b5061021760048036038101906102129190611001565b610a33565b005b34801561022557600080fd5b50610240600480360381019061023b919061102e565b610b81565b005b600034141561027d576040517fbb1b03c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346001600082825461028f9190611534565b9250508190555034600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e59190611534565b925050819055507f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4333460405161031d92919061137d565b60405180910390a1565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161038492919061137d565b602060405180830381600087803b15801561039e57600080fd5b505af11580156103b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d6919061106e565b5050565b6000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161043992919061131d565b60206040518083038186803b15801561045157600080fd5b505afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610489919061115e565b9050818110156104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c590611418565b60405180910390fd5b6000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161052f93929190611346565b602060405180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610581919061106e565b9050806105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba906113f8565b60405180910390fd5b505050565b60006105e260405180602001604052806000815250610717565b5090508061061c576040517f09af1f1d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336004546040518363ffffffff1660e01b815260040161067b92919061137d565b602060405180830381600087803b15801561069557600080fd5b505af11580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd919061106e565b5042600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b60006060600354600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442610769919061158a565b10610777576001915061077c565b600091505b915091565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290611458565b60405180910390fd5b80600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108979190611302565b60206040518083038186803b1580156108af57600080fd5b505afa1580156108c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e7919061115e565b10156108f257600080fd5b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161094f92919061137d565b602060405180830381600087803b15801561096957600080fd5b505af115801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a1919061106e565b5050565b60606000805480602002602001604051908101604052809291908181526020018280548015610a2957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109df575b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aba90611458565b60405180910390fd5b6001600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0890611458565b60405180910390fd5b6000805490508110610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f90611438565b60405180910390fd5b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600080805480602002602001604051908101604052809291908181526020018280548015610d3357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ce9575b5050505050905060008290505b60018251610d4e919061158a565b811015610ddc5781600182610d639190611534565b81518110610d7457610d73611720565b5b6020026020010151828281518110610d8f57610d8e611720565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080610dd490611679565b915050610d40565b508060009080519060200190610df3929190610e40565b506000805480610e0657610e056116f1565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055505050565b828054828255906000526020600020908101928215610eb9579160200282015b82811115610eb85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e60565b5b509050610ec69190610eca565b5090565b5b80821115610ee3576000816000905550600101610ecb565b5090565b6000610efa610ef58461149d565b611478565b905082815260208101848484011115610f1657610f1561178d565b5b610f21848285611606565b509392505050565b600081359050610f3881611851565b92915050565b600081519050610f4d81611868565b92915050565b60008083601f840112610f6957610f68611783565b5b8235905067ffffffffffffffff811115610f8657610f8561177e565b5b602083019150836001820283011115610fa257610fa1611788565b5b9250929050565b600082601f830112610fbe57610fbd611783565b5b8135610fce848260208601610ee7565b91505092915050565b600081359050610fe68161187f565b92915050565b600081519050610ffb8161187f565b92915050565b60006020828403121561101757611016611797565b5b600061102584828501610f29565b91505092915050565b6000806040838503121561104557611044611797565b5b600061105385828601610f29565b925050602061106485828601610fd7565b9150509250929050565b60006020828403121561108457611083611797565b5b600061109284828501610f3e565b91505092915050565b600080602083850312156110b2576110b1611797565b5b600083013567ffffffffffffffff8111156110d0576110cf611792565b5b6110dc85828601610f53565b92509250509250929050565b6000602082840312156110fe576110fd611797565b5b600082013567ffffffffffffffff81111561111c5761111b611792565b5b61112884828501610fa9565b91505092915050565b60006020828403121561114757611146611797565b5b600061115584828501610fd7565b91505092915050565b60006020828403121561117457611173611797565b5b600061118284828501610fec565b91505092915050565b600061119783836111a3565b60208301905092915050565b6111ac816115be565b82525050565b6111bb816115be565b82525050565b60006111cc826114de565b6111d68185611501565b93506111e1836114ce565b8060005b838110156112125781516111f9888261118b565b9750611204836114f4565b9250506001810190506111e5565b5085935050505092915050565b611228816115d0565b82525050565b6000611239826114e9565b6112438185611512565b9350611253818560208601611615565b61125c8161179c565b840191505092915050565b6000611274600f83611523565b915061127f826117ad565b602082019050919050565b6000611297601983611523565b91506112a2826117d6565b602082019050919050565b60006112ba601283611523565b91506112c5826117ff565b602082019050919050565b60006112dd601d83611523565b91506112e882611828565b602082019050919050565b6112fc816115fc565b82525050565b600060208201905061131760008301846111b2565b92915050565b600060408201905061133260008301856111b2565b61133f60208301846111b2565b9392505050565b600060608201905061135b60008301866111b2565b61136860208301856111b2565b61137560408301846112f3565b949350505050565b600060408201905061139260008301856111b2565b61139f60208301846112f3565b9392505050565b600060208201905081810360008301526113c081846111c1565b905092915050565b60006040820190506113dd600083018561121f565b81810360208301526113ef818461122e565b90509392505050565b6000602082019050818103600083015261141181611267565b9050919050565b600060208201905081810360008301526114318161128a565b9050919050565b60006020820190508181036000830152611451816112ad565b9050919050565b60006020820190508181036000830152611471816112d0565b9050919050565b6000611482611493565b905061148e8282611648565b919050565b6000604051905090565b600067ffffffffffffffff8211156114b8576114b761174f565b5b6114c18261179c565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061153f826115fc565b915061154a836115fc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561157f5761157e6116c2565b5b828201905092915050565b6000611595826115fc565b91506115a0836115fc565b9250828210156115b3576115b26116c2565b5b828203905092915050565b60006115c9826115dc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611633578082015181840152602081019050611618565b83811115611642576000848401525b50505050565b6116518261179c565b810181811067ffffffffffffffff821117156116705761166f61174f565b5b80604052505050565b6000611684826115fc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116b7576116b66116c2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b7f696e646578206f7574206f6620626f756e640000000000000000000000000000600082015250565b7f4f7065726174696f6e207265737472696374656420746f206f776e6572000000600082015250565b61185a816115be565b811461186557600080fd5b50565b611871816115d0565b811461187c57600080fd5b50565b611888816115fc565b811461189357600080fd5b5056fea2646970667358221220936e5b07c275ae97ebf9b35e41642afa77c3c086637fc9478d9905418993af6564736f6c63430008070033a2646970667358221220efaab70b74d2cd423843be7b1f4eb54ca9ef18dfd87e275e487aaa315e23cb5864736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 758,
        "contract": "contracts/Factory.sol:Factory",
        "label": "creatorToTrust",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      }
    }
  }
}